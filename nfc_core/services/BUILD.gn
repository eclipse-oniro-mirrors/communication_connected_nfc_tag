# Copyright (C) 2022 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/ohos.gni")
import("//build/ohos_var.gni")

config("nfc_config") {
  visibility = [ ":*" ]

  defines = [ "DEBUG" ]

  cflags_cc = [ "-DNXP_EXTNS=TRUE" ]

  include_dirs = [
    "include",
    "src/controller",
    "src/nci_adapter",
    "src/tags",
    "src/utils",
    "//third_party/nfc-nci/SN100x/src/gki/common/",
    "//third_party/nfc-nci/SN100x/src/gki/ulinux/",
    "//third_party/nfc-nci/SN100x/src/include",
    "//third_party/nfc-nci/SN100x/src/nfa/include",
    "//third_party/nfc-nci/SN100x/src/nfc/include",
    "//third_party/nfc-nci/SN100x/utils/include",
  ]
}

ohos_shared_library("nfc_service") {
  sources = [
    "src/controller/nfc_controller_impl.cpp",
    "src/controller/nfc_controller_stub.cpp",
    "src/nci_adapter/nci_adaptations.cpp",
    "src/nci_adapter/nfcc_host.cpp",
    "src/nci_adapter/nfcc_nci_adapter.cpp",
    "src/nci_adapter/tag_host.cpp",
    "src/nci_adapter/tag_nci_adapter.cpp",
    "src/nfc_sa_manager.cpp",
    "src/nfc_service.cpp",
    "src/tags/tag_dispatcher.cpp",
    "src/tags/tag_session.cpp",
    "src/tags/tag_session_stub.cpp",
    "src/utils/nfc_watch_dog.cpp",
    "src/utils/permission_tools.cpp",
    "src/utils/synchronize_event.cpp",
  ]

  public_configs = [ ":nfc_config" ]

  deps = [
    "//foundation/communication/nfc/nfc_core/interfaces/innerkits:nfc_inner_kits",
    "//third_party/nfc-nci/SN100x:nfc-nci",
    "//third_party/nfc-nci/SN100x/utils:nfcutils",
  ]

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "common_event_service:cesfwk_core",
    "common_event_service:cesfwk_innerkits",
    "hiviewdfx_hilog_native:libhilog",
    "ipc:ipc_core",
    "safwk:system_ability_fwk",
    "samgr_standard:samgr_proxy",
    "utils_base:utils",
  ]

  part_name = "nfc"
  subsystem_name = "communication"
}
